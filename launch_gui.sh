#!/bin/bash

# JARVIS GUI Launcher - V√§lj mellan klassisk och modern design
# Skapad: 19 augusti 2025

set -e

JARVIS_DIR="/home/bjorn/Skrivbord/Jarvis"
cd "$JARVIS_DIR"

# F√§rger f√∂r output
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Banner
echo -e "${BLUE}"
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë                    ü§ñ JARVIS AI Assistant                    ‚ïë"
echo "‚ïë                     GUI Design Selector                     ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo -e "${NC}"

echo -e "${CYAN}V√§lj vilken GUI-design du vill anv√§nda:${NC}\n"

echo -e "${YELLOW}1. üé® MODERN GUI${NC} (Ny design - Rekommenderas)"
echo -e "   ‚Ä¢ Discord/VS Code-inspirerat m√∂rkt tema"
echo -e "   ‚Ä¢ Professionell design med moderna komponenter" 
echo -e "   ‚Ä¢ F√∂rb√§ttrad anv√§ndarupplevelse och visuell feedback"
echo -e "   ‚Ä¢ Bar chart audio visualizer"
echo -e "   ‚Ä¢ Card-baserad layout med hover effects"
echo ""

echo -e "${GREEN}2. üè† KLASSISK GUI${NC} (Original design)"
echo -e "   ‚Ä¢ Standard tkinter-utseende"
echo -e "   ‚Ä¢ Enkel och funktionell"
echo -e "   ‚Ä¢ Waveform audio visualizer"
echo -e "   ‚Ä¢ Traditionell layout"
echo ""

echo -e "${PURPLE}3. üìä VISA DESIGN RESEARCH${NC}"
echo -e "   ‚Ä¢ Detaljerad analys av GUI-f√∂rb√§ttringar"
echo -e "   ‚Ä¢ Designtrender och rekommendationer"
echo -e "   ‚Ä¢ F√∂re/efter-j√§mf√∂relse"
echo ""

echo -e "${RED}4. ‚ùå AVSLUTA${NC}"
echo ""

# Kontrollera att servern k√∂rs
check_server() {
    if ! curl -s http://localhost:8081/api/status >/dev/null 2>&1; then
        echo -e "${YELLOW}‚ö†Ô∏è  JARVIS server verkar inte k√∂ra.${NC}"
        echo -e "${CYAN}Startar server automatiskt...${NC}"
        
        # Aktivera virtual environment och starta server i bakgrunden
        source jarvis/bin/activate
        python api/main.py &
        SERVER_PID=$!
        
        # V√§nta p√• att servern startar
        echo -e "${CYAN}V√§ntar p√• att servern startar...${NC}"
        for i in {1..10}; do
            if curl -s http://localhost:8081/api/status >/dev/null 2>&1; then
                echo -e "${GREEN}‚úÖ Server startad!${NC}"
                break
            fi
            echo -n "."
            sleep 1
        done
        
        if ! curl -s http://localhost:8081/api/status >/dev/null 2>&1; then
            echo -e "\n${RED}‚ùå Kunde inte starta servern automatiskt.${NC}"
            echo -e "${YELLOW}K√∂r manuellt: ./jarvis-server${NC}"
            exit 1
        fi
    else
        echo -e "${GREEN}‚úÖ JARVIS server k√∂rs redan${NC}"
    fi
}

# K√∂r GUI baserat p√• val
run_gui() {
    local choice=$1
    
    case $choice in
        1)
            echo -e "\n${BLUE}üé® Startar Modern GUI...${NC}"
            source jarvis/bin/activate
            python gui/modern_gui.py
            ;;
        2)
            echo -e "\n${GREEN}üè† Startar Klassisk GUI...${NC}"
            source jarvis/bin/activate
            python gui/main_window.py
            ;;
        3)
            echo -e "\n${PURPLE}üìä √ñppnar Design Research...${NC}"
            if command -v code >/dev/null 2>&1; then
                code docs/GUI_DESIGN_RESEARCH.md
            elif command -v gedit >/dev/null 2>&1; then
                gedit docs/GUI_DESIGN_RESEARCH.md
            elif command -v nano >/dev/null 2>&1; then
                nano docs/GUI_DESIGN_RESEARCH.md
            else
                cat docs/GUI_DESIGN_RESEARCH.md | less
            fi
            ;;
        4)
            echo -e "\n${RED}‚ùå Avslutar...${NC}"
            exit 0
            ;;
        *)
            echo -e "${RED}‚ùå Ogiltigt val. F√∂rs√∂k igen.${NC}"
            return 1
            ;;
    esac
}

# Huvudloop
while true; do
    echo -e "${CYAN}Ange ditt val (1-4): ${NC}"
    read -r choice
    
    if [ "$choice" = "3" ]; then
        run_gui "$choice"
        echo -e "\n${CYAN}Tryck Enter f√∂r att forts√§tta...${NC}"
        read -r
        continue
    elif [ "$choice" = "4" ]; then
        run_gui "$choice"
        break
    elif [ "$choice" = "1" ] || [ "$choice" = "2" ]; then
        check_server
        run_gui "$choice"
        break
    else
        echo -e "${RED}‚ùå Ogiltigt val '$choice'. Ange 1, 2, 3 eller 4.${NC}\n"
    fi
done

echo -e "\n${GREEN}üëã Tack f√∂r att du anv√§nder JARVIS!${NC}"
